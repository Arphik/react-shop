{"version":3,"sources":["app/components/header/HeaderMenu.tsx","app/components/header/MenuTop.tsx","app/components/header/Header.tsx","app/components/promotions/Promotions.tsx","app/components/content/filter/Filter.tsx","app/components/content/views/LargeBricksView.tsx","app/components/content/views/SmallBricksView.tsx","app/components/content/views/LargeListView.tsx","app/components/content/views/SmallListView.tsx","app/components/content/filter/DataOperations.ts","app/components/content/ItemsList.tsx","app/App.tsx","serviceWorker.ts","index.tsx"],"names":["HeaderMenu","className","to","icon","faHeadset","faUser","faHeart","faShoppingCart","MenuTop","categories","Menu","map","category","index","key","name","subcats","subcat","links","link","url","Header","type","id","placeholder","value","faSearch","Promotions","useState","promotionIndex","setPromIndex","bannersRef","useRef","changePromotion","newSide","current","setAttribute","console","log","onClick","ref","Filter","props","clearCheckboxes","document","querySelectorAll","forEach","element","checked","newFilterObj","JSON","parse","stringify","state","filterObject","setState","changeFilteredData","filterData","event","target","push","Number","filter","producer","gpumodel","memorytype","vram","types","data","gpuStats","title","names","item","onChange","String","t","this","Component","LargeBricksView","elements","items","faBalanceScale","src","image","alt","connectors","price","faCartPlus","SmallBricksView","LargeListView","SmallListView","faImage","shortStats","DataOperations","newItems","length","undefined","find","getFullData","ItemsList","changeView","choice","newView","filteredData","newFilteredData","dataOps","setFilteredData","view","App","path","exact","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.c1dbe934.chunk.js","sourcesContent":["import React from 'react';\r\nimport './HeaderMenu.scss';\r\nimport {\r\n    BrowserRouter as Router,\r\n    Link\r\n} from \"react-router-dom\";\r\n\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faHeadset, faShoppingCart, faUser, faHeart } from '@fortawesome/free-solid-svg-icons'\r\n\r\nconst HeaderMenu: React.FC = () => {\r\n    return (\r\n        <Router>\r\n            <nav className=\"header__menu\">\r\n                <Link to=\"\" className=\"header__link\">\r\n                    <div className=\"header__link-content\">\r\n                        <FontAwesomeIcon className=\"header__link--icon\" icon={faHeadset} />\r\n                        <span className=\"header____link--text\">Pomoc i kontakt</span>\r\n                    </div>\r\n                </Link>\r\n                <span className=\"header__separator\"></span>\r\n                <Link to=\"\" className=\"header__link\">\r\n                    <div className=\"header__link-content\">\r\n                        <FontAwesomeIcon icon={faUser} />\r\n                        <span className=\"header____link--text\">Twoje konto</span>\r\n                    </div>\r\n                </Link>\r\n                <Link to=\"\" className=\"header__link\">\r\n                    <div className=\"header__link-content\">\r\n                        <FontAwesomeIcon icon={faHeart} />\r\n                        <span className=\"header____link--text\">Twoje listy</span>\r\n                    </div>\r\n                </Link>\r\n                <Link to=\"\" className=\"header__link\">\r\n                    <div className=\"header__link-content\">\r\n                        <FontAwesomeIcon icon={faShoppingCart} />\r\n                        <span className=\"header____link--text\">Koszyk</span>\r\n                    </div>\r\n                </Link>\r\n            </nav>\r\n        </Router>\r\n    );\r\n}\r\n\r\nexport default HeaderMenu;","import React from 'react';\r\nimport {\r\n  BrowserRouter as Router,\r\n  Link\r\n} from \"react-router-dom\";\r\nimport './MenuTop.scss';\r\n\r\nimport Menu from './MenuTop.json';\r\n\r\nconst MenuTop: React.FC = () => {\r\n\r\n    // console.log(Menu);\r\n    const categories = Menu.categories.map((category, index) => (\r\n        \r\n            <div className=\"menu-top__category--btn\" key={index}>\r\n                {category.name}\r\n                <ul className=\"menu-top__subcategories\">\r\n                    {category.subcats.map((subcat, index) => (   \r\n                        <li className=\"menu-top__categories--link\" key={index}>\r\n                            {subcat.name}\r\n                            <div className=\"menu-top__subcategories--content\" key={index}>\r\n                                {subcat.links.map((link, index) => (\r\n                                    <div className=\"subcategory__link\" key={index}>\r\n                                        <Link to={`/${link.url}`}>{link.name}</Link>\r\n                                    </div>\r\n                                ))}\r\n                            </div>\r\n                        </li>\r\n                    ))}\r\n                </ul>\r\n            </div>\r\n    ));\r\n\r\n    return (\r\n        <Router>\r\n        <nav className=\"menu-top\">\r\n            {categories}\r\n        </nav>\r\n        </Router>\r\n    );\r\n}\r\n\r\nexport default MenuTop;","import React from 'react';\r\nimport './Header.scss';\r\nimport HeaderMenu from './HeaderMenu';\r\nimport MenuTop from './MenuTop';\r\nimport {\r\n    Link\r\n} from \"react-router-dom\";\r\n\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faSearch } from '@fortawesome/free-solid-svg-icons'\r\n\r\nconst Header: React.FC = () => {\r\n    return (\r\n        <div className=\"header\">\r\n            <div className=\"header__container\">\r\n                <Link to=\"./\" className=\"header__logo\">LOGO</Link>\r\n\r\n                <div className=\"header__search\">\r\n                    <input type=\"text\" name=\"\" id=\"\" className=\"header__search--input\" placeholder=\"What are you searching?\" />\r\n                    <span className=\"header__separator\"></span>\r\n                    <select name=\"\" id=\"\" className=\"header__search--select\">\r\n                        <option value=\"\" className=\"search__select--option\">Wszędzie</option>\r\n                    </select>\r\n                    <button className=\"header__search--button\"><FontAwesomeIcon icon={faSearch} /></button>\r\n                </div>\r\n\r\n                <HeaderMenu/>\r\n            </div>\r\n            <MenuTop/>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Header;","import React, { useState, useRef } from 'react';\r\nimport './Promotions.scss';\r\n\r\nconst Promotions: React.FC = () => {\r\n\r\n    const [promotionIndex, setPromIndex] = useState<number>(0);\r\n    const bannersRef = useRef<HTMLDivElement>(null);\r\n\r\n    const changePromotion = (newSide: number) => {\r\n        const min = 0; const max = 3;\r\n        if(newSide>max) newSide = min;\r\n        if(newSide<min) newSide = max;\r\n        if(bannersRef.current !== null){\r\n            bannersRef.current.setAttribute('style', `left: -${newSide*100}%`);\r\n        }\r\n        console.log(\"Change prom\", promotionIndex);\r\n        return newSide;\r\n    }\r\n\r\n\r\n    return (\r\n        <div className=\"promotions\">\r\n            <span className=\"promotions__button--left\" onClick={() => setPromIndex(changePromotion(promotionIndex-1))}>&lt;</span>\r\n            <span className=\"promotions__button--right\" onClick={() => setPromIndex(changePromotion(promotionIndex+1))}>&gt;</span>\r\n            <div className=\"promotions__banners--container\">\r\n                <div className=\"banners\" ref={bannersRef}>\r\n                    <span className=\"banner\"><p className=\"promotions__title\">Banner 1</p></span>\r\n                    <span className=\"banner\"><p className=\"promotions__title\">Banner 2</p></span>\r\n                    <span className=\"banner\"><p className=\"promotions__title\">Banner 3</p></span>\r\n                    <span className=\"banner\"><p className=\"promotions__title\">Banner 4</p></span>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Promotions;","\r\nimport React, { Component } from 'react';\r\nimport './Filter.scss';\r\nimport { IGpusModel, IFilterObject } from '../views/gpus.model';\r\n\r\ninterface FilterProps {\r\n  data: IGpusModel;\r\n  changeFilteredData(filter: IFilterObject): void;\r\n}\r\ninterface FilterState {\r\n    types: JSX.Element[],\r\n    filterObject: IFilterObject\r\n}\r\n\r\nexport default class Filter extends Component<FilterProps, FilterState> {\r\n\r\n    constructor(props: FilterProps){\r\n        super(props);\r\n        this.state = {\r\n            filterObject: {\r\n                producer: [],\r\n                gpumodel: [],\r\n                memorytype: [],\r\n                vram: [],\r\n            },\r\n            types: this.props.data.gpuStats.types.map((type, index) => (<div className=\"filter__type\" key={index}>\r\n                <div className=\"filter__type--title\">{type.title}</div>\r\n                {type.names.map((item, index) => (\r\n                    <div className=\"filter__checkbox--container\" key={index}>\r\n                        <span className=\"filter__clear\" onClick={() => this.clearCheckboxes(type.name)}>Wyczyść</span>\r\n                        <input className={`filter__checkbox--${type.name}`} type=\"checkbox\" onChange={this.filterData} name={type.name} id={String(index)}/>{item.t}\r\n                    </div>))}\r\n            </div>))\r\n        }\r\n    }\r\n\r\n    clearCheckboxes = (type: string) => {\r\n        console.log(document.querySelectorAll(`.filter__checkbox--${type}`));\r\n        document.querySelectorAll(`.filter__checkbox--${type}`)\r\n        .forEach((element) => (element as HTMLInputElement).checked = false);\r\n\r\n        let newFilterObj = JSON.parse(JSON.stringify(this.state.filterObject));\r\n        newFilterObj[type] = [];\r\n        this.setState(() => ({filterObject: newFilterObj}));\r\n        this.props.changeFilteredData(newFilterObj);\r\n    }\r\n\r\n    filterData = (event: any) => {\r\n        let newFilterObj = this.state.filterObject;\r\n        \r\n        event.target.checked ? \r\n            newFilterObj[event.target.name as keyof IFilterObject].push(Number(event.target.id)) :\r\n            newFilterObj[event.target.name as keyof IFilterObject] = newFilterObj[event.target.name as keyof IFilterObject]\r\n            .filter((element) => element !== Number(event.target.id));\r\n\r\n        this.setState(() => ({filterObject: newFilterObj}));\r\n        console.log('newFilterObj', newFilterObj);\r\n\r\n        this.props.changeFilteredData(this.state.filterObject);\r\n    }\r\n\r\n    render(){\r\n        return (\r\n            <div className=\"filter\">\r\n                {this.state.types}\r\n            </div>\r\n        );\r\n    }\r\n}","import React from 'react';\r\nimport './LargeBricksView.scss';\r\nimport { Link } from \"react-router-dom\";\r\nimport {IGpusModel, IItem} from './gpus.model';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faBalanceScale, faCartPlus } from '@fortawesome/free-solid-svg-icons';\r\n\r\ntype ViewProps = {\r\n  data: IGpusModel\r\n}\r\n\r\nconst LargeBricksView = ({data}: ViewProps): JSX.Element => {\r\n\r\n  console.log(data);\r\n\r\n  const elements = data.items.map((item: IItem, index: number) => (\r\n      <Link to={`./${item.id}`} className=\"large-bricks__item\" key={index}>\r\n      \r\n        <div className=\"large-bricks__compare\">\r\n          <span className=\"large-bricks__compare--icon\">\r\n            <FontAwesomeIcon icon={faBalanceScale}/>\r\n          </span>\r\n        </div>\r\n        \r\n        <img className=\"large-bricks__image\" src={item.image} alt=\"\"/>\r\n      \r\n        <div className=\"large-bricks__desc\">\r\n          <Link to={`./${item.id}`} className=\"large-bricks__title\">{item.title}</Link>\r\n          <div className=\"large-bricks__short-stats\">\r\n            <p className=\"large-bricks__short-stats--p\">Układ: {data.gpuStats.types[1].names[item.gpumodel].t}</p>\r\n            <p className=\"large-bricks__short-stats--p\">Pamięć: {item.vram}</p>\r\n            <p className=\"large-bricks__short-stats--p\">Rodzaj pamięci: {data.gpuStats.types[2].names[item.memorytype].t}</p>\r\n            <p className=\"large-bricks__short-stats--p\">Złącza: {item.connectors}</p>\r\n          </div>\r\n        </div>\r\n        \r\n        <div className=\"large-bricks__price\"><span>{item.price} zł</span></div>\r\n        \r\n        <span className=\"large-bricks__cart\"><FontAwesomeIcon icon={faCartPlus} /></span>\r\n\r\n      </Link>\r\n  ));\r\n  return (\r\n    <div className=\"large-bricks\">\r\n      {elements}\r\n    </div>);\r\n}\r\n\r\nexport default LargeBricksView;","import React from 'react';\r\nimport './SmallBricksView.scss';\r\nimport { Link } from 'react-router-dom';\r\nimport { IGpusModel, IItem } from './gpus.model';\r\n\r\ntype ViewProps = {\r\n  data: IGpusModel\r\n}\r\n\r\nconst SmallBricksView = ({data}: ViewProps): JSX.Element => {\r\n\r\n  const items = data.items.map((item: IItem, index) => (\r\n        <div className=\"small-bricks__item\" key={index}>\r\n\r\n          <div className=\"small-bricks__image--container\">\r\n            <div className=\"small-bricks__checkbox--container\"><input type=\"checkbox\" className=\"small-bricks__checkbox\"/> do porównania</div>\r\n            <Link to=\"./\"><img className=\"small-bricks__image\" src={item.image} alt=\"\"/></Link>\r\n          </div>\r\n\r\n          <div className=\"small-bricks__short-desc\">\r\n            <Link to=\"./\" className=\"small-bricks__title\">{item.title}</Link>\r\n            <div className=\"small-bricks__short-stats\">\r\n            <p className=\"large-bricks__short-stats--p\">Układ: {data.gpuStats.types[1].names[item.gpumodel].t}</p>\r\n            <p className=\"large-bricks__short-stats--p\">Pamięć: {item.vram}</p>\r\n            <p className=\"large-bricks__short-stats--p\">Rodzaj pamięci: {data.gpuStats.types[2].names[item.memorytype].t}</p>\r\n            <p className=\"large-bricks__short-stats--p\">Złącza: {item.connectors}</p>\r\n            </div>\r\n          </div>\r\n          \r\n          <div className=\"small-bricks__price\">{item.price} zł</div>\r\n        </div>\r\n  ));\r\n  return (\r\n    <div className=\"small-bricks\">\r\n      {items}\r\n    </div>);\r\n}\r\n  \r\nexport default SmallBricksView;","import React from 'react';\r\nimport './LargeListView.scss';\r\nimport {IGpusModel, IItem} from './gpus.model';\r\nimport { Link } from 'react-router-dom';\r\n\r\ntype ViewProps = {\r\n  data: IGpusModel\r\n}\r\n\r\nconst LargeListView = ({data}: ViewProps): JSX.Element => {\r\n\r\n  const items = data.items.map((item: IItem, index) => (\r\n    <div className=\"large-list__item\" key={index}>\r\n\r\n      <div className=\"large-list__image--container\">\r\n        <Link to=\"./\" className=\"large-list__link\"><img src={item.image} className=\"large-list__image\" alt=\"\"/></Link>\r\n      </div>\r\n\r\n      <div className=\"large-list__short-desc\">\r\n        <div className=\"large-list__title\"><Link to=\"./\">{item.title}</Link></div>\r\n        <div className=\"large-list__short-stats\">\r\n            Układ: {data.gpuStats.types[1].names[item.gpumodel].t} Pamięć: {item.vram} Rodzaj pamięci: {data.gpuStats.types[2].names[item.memorytype].t} Złącza: {item.connectors}\r\n        </div>\r\n      </div>\r\n\r\n      <div className=\"large-list__checkbox--container\"><input type=\"checkbox\" className=\"large-list__checkbox\"/> do porównania</div>\r\n\r\n      <div className=\"large-list__price\"><span className=\"large-list__price--span\">{item.price} zł</span></div>\r\n    </div>\r\n  ));\r\n\r\n  return (\r\n    <div className=\"large-list\">\r\n      {items}\r\n    </div>);\r\n}\r\n\r\nexport default LargeListView;","import React from 'react';\r\nimport './SmallListView.scss';\r\nimport { IGpusModel, IItem } from './gpus.model';\r\nimport { Link } from 'react-router-dom';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faImage } from '@fortawesome/free-regular-svg-icons';\r\nimport { faBalanceScale, faCartPlus } from '@fortawesome/free-solid-svg-icons';\r\n\r\ntype ViewProps = {\r\n  data: IGpusModel\r\n}\r\n\r\nconst SmallListView = ({data}: ViewProps): JSX.Element => {\r\n  console.log(\"SMALL LIST DATA\", data);\r\n\r\n  const items = data.items.map((item: IItem, index) => (\r\n    <Link to={`${index}`} className=\"small-list__item\" key={index}>\r\n      <div className=\"small-list__image--container\">\r\n        <FontAwesomeIcon icon={faImage} />\r\n        <img src={item.image} className=\"small-list__hover-image\" alt=\"\"/>\r\n      </div>\r\n  \r\n      <h5 className=\"small-list__title\">{item.title}</h5>\r\n\r\n      <span className=\"small-list__short-stats\">{item.shortStats}</span>\r\n  \r\n      <div className=\"small-list__compare\">\r\n        <span className=\"small-list__compare--icon\">\r\n          <FontAwesomeIcon icon={faBalanceScale}/>\r\n        </span>\r\n      </div>\r\n\r\n      <div className=\"small-list__cart\">\r\n        <span className=\"small-list__cart--icon\">\r\n          <FontAwesomeIcon icon={faCartPlus}/>\r\n        </span>\r\n      </div>\r\n  \r\n      <div className=\"small-list__price\">6 738,08 zł</div>\r\n    </Link>\r\n  ));\r\n  \r\n  return (\r\n    <div className=\"small-list\">\r\n      {items}\r\n    </div>);\r\n}\r\n\r\nexport default SmallListView;\r\n\r\n\r\n","import data from  '../../../../assets/shop-items.json';\r\nimport { IGpusModel, IItem, IFilterObject } from '../views/gpus.model';\r\n\r\nexport interface DataOperations{\r\n    fullData: IGpusModel;\r\n    getFullData(): IGpusModel;\r\n    getFilteredData(): IGpusModel;\r\n    FetchData(url: string): IGpusModel;\r\n}\r\n\r\nexport class DataOperations{\r\n\r\n    getFullData(): IGpusModel { return data; }\r\n\r\n    setFilteredData({items, gpuStats}: IGpusModel, filterObject: IFilterObject): IItem[] {\r\n        console.log(\"setFilteredData items\", items);\r\n        let newItems: IItem[] = items;\r\n        if(filterObject.gpumodel.length){\r\n            newItems = items\r\n            .filter((item) => filterObject.gpumodel\r\n                .find((gpumodel) => gpumodel === item.gpumodel) !== undefined); \r\n        }\r\n        if(filterObject.producer.length){\r\n            newItems = items\r\n            .filter((item) => filterObject.producer\r\n                .find((producer) => producer === item.producer) !== undefined); \r\n        }\r\n        if(filterObject.memorytype.length){\r\n            newItems = items\r\n            .filter((item) => filterObject.memorytype\r\n                .find((memorytype) => memorytype === item.memorytype) !== undefined); \r\n        }\r\n        if(filterObject.vram.length){\r\n            newItems = items\r\n            .filter((item) => filterObject.vram\r\n                .find((vram) => vram === item.vram) !== undefined); \r\n        }\r\n        return newItems;\r\n    }\r\n\r\n    filteringData(){\r\n        let filteredData = this.getFullData();\r\n        return filteredData;\r\n    }\r\n}","import React, { Component } from 'react';\r\nimport Filter from './filter/Filter';\r\nimport './ItemsList.scss';\r\n\r\nimport LargeBricksView from './views/LargeBricksView';\r\nimport SmallBricksView from './views/SmallBricksView';\r\nimport LargeListView from './views/LargeListView';\r\nimport SmallListView from './views/SmallListView';\r\nimport { DataOperations } from './filter/DataOperations';\r\nimport { IGpusModel, IItem } from './views/gpus.model';\r\n\r\ninterface ItemsListState {\r\n  data: IGpusModel;\r\n  filteredData: IGpusModel;\r\n  view: number;\r\n  dataOps: DataOperations;\r\n}\r\n\r\nexport default class ItemsList extends Component<{}, ItemsListState> {\r\n\r\n  constructor(props: any){\r\n    super(props);\r\n    this.state = {\r\n      data: new DataOperations().getFullData(),\r\n      filteredData: new DataOperations().getFullData(),\r\n      view: 1,\r\n      dataOps: new DataOperations()\r\n    }\r\n    // console.log(\"didMount data \", this.state.data);\r\n  }\r\n\r\n  componentDidMount(){\r\n    this.setState(() => ({\r\n      data: this.state.dataOps.getFullData(),\r\n      filteredData: this.state.dataOps.getFullData(),\r\n    }))\r\n  }\r\n\r\n    changeView = (choice: number): JSX.Element => {\r\n      let newView = (<div></div>);\r\n        switch(choice){\r\n            case 1: newView = (<LargeBricksView data={this.state.filteredData}/>);\r\n            break;\r\n            case 2: newView = (<SmallBricksView data={this.state.filteredData}/>);\r\n            break;\r\n            case 3: newView = (<LargeListView data={this.state.filteredData}/>);\r\n            break;\r\n            case 4: newView = (<SmallListView data={this.state.filteredData}/>);\r\n            break;\r\n        }\r\n        return newView;\r\n    }\r\n\r\n    changeFilteredData = (filter: any): void => {\r\n      let newFilteredData = JSON.parse(JSON.stringify(this.state.data));\r\n      newFilteredData.items = this.state.dataOps.setFilteredData(this.state.data, filter);\r\n      this.setState(() => ({filteredData: newFilteredData}));\r\n       console.log(\"FILTERED\", this.state.filteredData);\r\n    }\r\n\r\n    render(): JSX.Element {\r\n      return (\r\n        <div className=\"shop-content\">\r\n          <Filter data={this.state.data} changeFilteredData={this.changeFilteredData}/>\r\n\r\n          \r\n          <div className=\"items-list\">\r\n            <div className=\"changeView\">\r\n              <div className=\"largeBricks\" onClick={() => this.setState(()=>({view: 1}))}></div>\r\n              <div className=\"smallBricks\" onClick={() => this.setState(()=>({view: 2}))}></div>\r\n              <div className=\"largeList\" onClick={() => this.setState(()=>({view: 3}))}></div>\r\n              <div className=\"smallList\" onClick={() => this.setState(()=>({view: 4}))}></div>\r\n            </div>\r\n            {this.changeView(this.state.view)}\r\n          </div>\r\n        </div>\r\n      )\r\n    };\r\n}","import React from 'react';\nimport './App.css';\n\nimport Header from './components/header/Header';\nimport Promotions from './components/promotions/Promotions';\n\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route\n} from \"react-router-dom\";\nimport ItemsList from './components/content/ItemsList';\n\nconst App: React.FC = () => {\n  return (\n    <div className=\"App\">\n      <Router>\n          <Header/> \n\n          <section className=\"app__content\">\n            <Switch>\n              <Route path=\"/\" exact>\n                <Promotions/>\n              </Route>\n              <Route path=\"/search\">\n                <ItemsList/>\n              </Route>\n            </Switch>\n          </section>\n      </Router>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './app/App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}
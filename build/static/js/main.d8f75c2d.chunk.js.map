{"version":3,"sources":["app/components/header/HeaderMenu.tsx","app/components/header/MenuTopSubLinks.tsx","app/components/header/MenuTopSubCategories.tsx","app/components/header/MenuTopCategory.tsx","app/components/header/MenuTop.tsx","app/components/header/Header.tsx","app/components/promotions/Promotions.tsx","app/components/content/views/LargeBricksView.tsx","app/components/content/filter/DataOperations.ts","app/components/content/ItemsList.tsx","app/components/panel/PanelAddProd.tsx","app/components/panel/PanelMenu.tsx","app/components/panel/Panel.tsx","app/App.tsx","serviceWorker.ts","index.tsx"],"names":["HeaderMenu","className","to","icon","faHeadset","faUser","faHeart","faShoppingCart","MenuTopSubLinks","subcatlinks","map","index","name","url","key","MenuTopSubCategories","subcats","subcatClass","id","MenuTopCategory","categories","grayOutContent","choice","console","log","document","querySelector","setAttribute","onMouseEnter","onMouseLeave","MenuTop","Menu","Header","type","placeholder","value","faSearch","Promotions","useState","promotionIndex","setPromIndex","bannersRef","useRef","changePromotion","newSide","current","onClick","faArrowLeft","faArrowRight","ref","LargeBricksView","elements","data","image","title","price","gpumodel","vram","memorytype","connectors","faBalanceScale","src","alt","faCartPlus","DataOperations","fetchOpts","method","mode","headers","Accept","fetch","this","response","json","ItemsList","props","changeView","newView","state","changeFilteredData","filter","view","getFullData","then","setState","Component","PanelAddProd","desc","qty","updateName","e","currentTarget","updateDesc","updatePrice","Number","addProduct","a","preventDefault","description","body","JSON","stringify","Headers","onChange","rows","React","PanelMenu","activeClassName","Panel","path","component","App","exact","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.d8f75c2d.chunk.js","sourcesContent":["import React from 'react';\r\nimport './HeaderMenu.scss';\r\nimport {\r\n    BrowserRouter as Router,\r\n    Link\r\n} from \"react-router-dom\";\r\n\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faHeadset, faShoppingCart, faUser, faHeart } from '@fortawesome/free-solid-svg-icons'\r\n\r\nconst HeaderMenu: React.FC = () => {\r\n    return (\r\n        <nav className=\"header__menu\">\r\n            <Link to=\"\" className=\"header__link\">\r\n                <div className=\"header__link-content\">\r\n                    <FontAwesomeIcon className=\"header__link--icon\" icon={faHeadset} />\r\n                    <span className=\"header__link--text\">Pomoc i kontakt</span>\r\n                </div>\r\n            </Link>\r\n            <span className=\"header__separator\"></span>\r\n            <Link to=\"panel\" className=\"header__link\">\r\n                <div className=\"header__link-content\">\r\n                    <FontAwesomeIcon icon={faUser} />\r\n                    <span className=\"header__link--text\">Twoje konto</span>\r\n                </div>\r\n            </Link>\r\n            <Link to=\"\" className=\"header__link\">\r\n                <div className=\"header__link-content\">\r\n                    <FontAwesomeIcon icon={faHeart} />\r\n                    <span className=\"header__link--text\">Twoje listy</span>\r\n                </div>\r\n            </Link>\r\n            <Link to=\"\" className=\"header__link\">\r\n                <div className=\"header__link-content\">\r\n                    <FontAwesomeIcon icon={faShoppingCart} />\r\n                    <span className=\"header__link--text\">Koszyk</span>\r\n                </div>\r\n            </Link>\r\n        </nav>\r\n    );\r\n}\r\n\r\nexport default HeaderMenu;","import React from 'react';\r\nimport {\r\n  NavLink\r\n} from \"react-router-dom\";\r\nimport './MenuTopSubLinks.scss';\r\nimport { SubCatLink } from './MenuTop';\r\n\r\ntype Props = {\r\n    subcatlinks: SubCatLink[]\r\n}\r\n\r\nconst MenuTopSubLinks = ({subcatlinks}: Props) => {\r\n\r\n    return (\r\n        <div className=\"menu-top__subcategories--links\">\r\n            {subcatlinks.map(({name, url}, index) => (\r\n                <NavLink to={url} className=\"menu-top__subcategories--link\" key={index}>\r\n                    {name}\r\n                </NavLink>\r\n            ))}\r\n        </div>\r\n    );\r\n}\r\nexport default MenuTopSubLinks;","import React from 'react';\r\nimport {\r\n  BrowserRouter as Router\r\n} from \"react-router-dom\";\r\nimport './MenuTopSubCategories.scss';\r\nimport MenuTopSubLinks from './MenuTopSubLinks';\r\nimport { SubCat } from './MenuTop';\r\n\r\ntype Props = {\r\n    subcats: SubCat[],\r\n    id: number\r\n}\r\n\r\nconst MenuTopSubCategories = ({subcats, id}: Props) => {\r\n\r\n    let subcatClass = \"menu-top__subcategories--container subcat--right\";\r\n    if(id > 3) subcatClass = \"menu-top__subcategories--container subcat--left\";\r\n\r\n    return (\r\n        <ul className={subcatClass}>\r\n            {subcats.map(({name, subcatlinks}, index) => (   \r\n                <li className=\"menu-top__subcategory--li\" key={index}> \r\n                    {name}\r\n                    <MenuTopSubLinks subcatlinks={subcatlinks}/>\r\n                </li>\r\n            ))}\r\n        </ul>\r\n    );\r\n}\r\nexport default MenuTopSubCategories;","import React from 'react';\r\nimport {\r\n  BrowserRouter as Router\r\n} from \"react-router-dom\";\r\nimport './MenuTopCategory.scss';\r\nimport MenuTopSubCategories from './MenuTopSubCategories';\r\nimport { Category } from './MenuTop';\r\n\r\ntype Props = {\r\n    categories: Category[]\r\n}\r\n\r\nconst MenuTopCategory = ({categories}: Props) => {\r\n\r\n    const grayOutContent = (choice: boolean) => {\r\n        console.log(\"CHANGE\");\r\n        if(choice){\r\n            document.querySelector('.gray-cover')?.setAttribute('style', 'background: rgba(0, 0, 0, 0.541); height: 100%;');\r\n            console.log(document.querySelector('.gray-cover'));\r\n        }else{\r\n            document.querySelector('.gray-cover')?.setAttribute('style', 'background: rgba(0, 0, 0, 0); height: 0;');\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div className=\"menu-top__categories\">\r\n            {categories.map(({name, subcats}, index) => (\r\n                <div className=\"menu-top__category-container\" key={index}>\r\n                    <div className=\"menu-top__category--btn\" onMouseEnter={() => grayOutContent(true)} onMouseLeave={() => grayOutContent(false)}>\r\n                        {name}\r\n                        <MenuTopSubCategories subcats={subcats} id={index}/>\r\n                    </div>\r\n                </div>\r\n            ))}\r\n        </div>\r\n    );\r\n}\r\nexport default MenuTopCategory;","import React from 'react';\r\nimport {\r\n  BrowserRouter as Router,\r\n  Link\r\n} from \"react-router-dom\";\r\nimport './MenuTop.scss';\r\n\r\nimport Menu from './MenuTop.json';\r\nimport MenuTopCategory from './MenuTopCategory';\r\n\r\nexport interface SubCatLink{\r\n    name: string,\r\n    url: string\r\n}\r\n\r\nexport interface SubCat{\r\n    name: string,\r\n    subcatlinks: SubCatLink[]\r\n}\r\n\r\nexport interface Category{\r\n    name: string,\r\n    subcats: SubCat[]\r\n}\r\n\r\nexport interface IMenuTop{\r\n    Menu: Category\r\n}\r\n\r\nconst MenuTop = () => {\r\n\r\n    // console.log(Menu);\r\n\r\n    return (\r\n        <nav className=\"menu-top\">\r\n            <MenuTopCategory categories={Menu.categories}/>\r\n        </nav>\r\n    );\r\n}\r\n\r\nexport default MenuTop;","import React from 'react';\r\nimport './Header.scss';\r\nimport HeaderMenu from './HeaderMenu';\r\nimport MenuTop from './MenuTop';\r\nimport {\r\n    Link\r\n} from \"react-router-dom\";\r\n\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faSearch } from '@fortawesome/free-solid-svg-icons'\r\n\r\nconst Header: React.FC = () => {\r\n    return (\r\n        <header className=\"header\">\r\n\r\n            <div className=\"header__container\">\r\n                <Link to=\"/\" className=\"header__logo\">LOGO</Link>\r\n\r\n                <div className=\"header__search\">\r\n                    <input type=\"text\" name=\"\" id=\"\" className=\"header__search--input\" placeholder=\"What are you searching?\" />\r\n                    <span className=\"header__separator\"></span>\r\n                    <select name=\"\" id=\"\" className=\"header__search--select\">\r\n                        <option value=\"\" className=\"search__select--option\">Wszędzie</option>\r\n                    </select>\r\n                    <button className=\"header__search--button\"><FontAwesomeIcon icon={faSearch} /></button>\r\n                </div>\r\n\r\n                <HeaderMenu/>\r\n                \r\n            </div>\r\n\r\n            <MenuTop/>\r\n        </header>\r\n    );\r\n}\r\n\r\nexport default Header;","import React, { useState, useRef } from 'react';\r\nimport './Promotions.scss';\r\n\r\nimport { FontAwesomeIcon} from '@fortawesome/react-fontawesome';\r\nimport { faArrowLeft, faArrowRight } from '@fortawesome/free-solid-svg-icons';\r\n\r\nconst Promotions: React.FC = () => {\r\n\r\n    const [promotionIndex, setPromIndex] = useState<number>(0);\r\n    const bannersRef = useRef<HTMLDivElement>(null);\r\n\r\n    const changePromotion = (newSide: number) => {\r\n        const min = 0; const max = 3;\r\n        if(newSide>max) newSide = min;\r\n        if(newSide<min) newSide = max;\r\n        if(bannersRef.current !== null){\r\n            bannersRef.current.setAttribute('style', `left: -${newSide*100}%`);\r\n        }\r\n        console.log(\"Change prom\", promotionIndex);\r\n        return newSide;\r\n    }\r\n\r\n\r\n    return (\r\n        <div className=\"promotions\">\r\n            <span className=\"promotions__button--left\" onClick={() => setPromIndex(changePromotion(promotionIndex-1))}>\r\n                <FontAwesomeIcon icon={faArrowLeft}/>\r\n            </span>\r\n            <span className=\"promotions__button--right\" onClick={() => setPromIndex(changePromotion(promotionIndex+1))}>\r\n                <FontAwesomeIcon icon={faArrowRight}/>\r\n            </span>\r\n            <div className=\"promotions__banners--container\">\r\n                <div className=\"banners\" ref={bannersRef}>\r\n                    <span className=\"banner\"><p className=\"promotions__title\">Banner 1</p></span>\r\n                    <span className=\"banner\"><p className=\"promotions__title\">Banner 2</p></span>\r\n                    <span className=\"banner\"><p className=\"promotions__title\">Banner 3</p></span>\r\n                    <span className=\"banner\"><p className=\"promotions__title\">Banner 4</p></span>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Promotions;","import React, { useState } from 'react';\r\nimport './LargeBricksView.scss';\r\nimport { Link } from \"react-router-dom\";\r\nimport { IItem } from './gpus.model';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faBalanceScale, faCartPlus } from '@fortawesome/free-solid-svg-icons';\r\nimport { JsxEmit } from 'typescript';\r\n\r\ntype ViewProps = {\r\n  data: IItem[]\r\n}\r\n\r\nconst LargeBricksView = ({data}: ViewProps): JSX.Element => {\r\n\r\n  const elements = data.map(({id, image, title, price, gpumodel, vram, memorytype, connectors}: IItem, index: number) => (\r\n    <Link to={`./${id}`} className=\"large-bricks__item\" key={index}>\r\n    \r\n      <div className=\"large-bricks__compare\">\r\n        <span className=\"large-bricks__compare--icon\">\r\n          <FontAwesomeIcon icon={faBalanceScale}/>\r\n        </span>\r\n      </div>\r\n      \r\n      <img className=\"large-bricks__image\" src={image} alt=\"\"/>\r\n    \r\n      <div className=\"large-bricks__desc\">\r\n        <Link to={`./${id}`} className=\"large-bricks__title\">{title}</Link>\r\n        <div className=\"large-bricks__short-stats\">\r\n          <p className=\"large-bricks__short-stats--p\">Układ: {gpumodel}</p>\r\n          <p className=\"large-bricks__short-stats--p\">Pamięć: {vram}</p>\r\n          <p className=\"large-bricks__short-stats--p\">Rodzaj pamięci: {memorytype}</p>\r\n          <p className=\"large-bricks__short-stats--p\">Złącza: {connectors}</p>\r\n        </div>\r\n      </div>\r\n      \r\n      <div className=\"large-bricks__price\"><span>{price} zł</span></div>\r\n      \r\n      <span className=\"large-bricks__cart\"><FontAwesomeIcon icon={faCartPlus} /></span>\r\n\r\n    </Link>\r\n  ));\r\n\r\n  console.log('type elements ', elements);\r\n  return (\r\n    <div className=\"large-bricks\">\r\n      {elements}\r\n    </div>);\r\n}\r\n\r\nexport default LargeBricksView;","import { trace } from 'console';\r\nimport data from  '../../../../assets/shop-items.json';\r\nimport { IGpusModel, IItem, IFilterObject } from '../views/gpus.model';\r\n\r\nexport interface DataOperations{\r\n    fullData: IGpusModel;\r\n    getFullData(): Promise<IItem[]>;\r\n    getFilteredData(): IGpusModel;\r\n    FetchData(url: string): IGpusModel;\r\n}\r\n\r\nexport class DataOperations{\r\n\r\n    fetchOpts = {\r\n        method: 'GET', // or 'PUT'\r\n        mode: 'cors' as RequestMode,\r\n        headers: {\r\n            Accept: 'application/json',\r\n            'Content-Type': 'application/json'\r\n        },\r\n    };\r\n\r\n    async getFullData(): Promise<IItem[]> {\r\n        try {\r\n            const response = await fetch('http://localhost:3000/products', this.fetchOpts);\r\n            const data = await response.json();\r\n            console.log('Data Ops data:');\r\n            console.log(data);\r\n            return data;\r\n        } catch (error) {\r\n            throw error;\r\n        }\r\n    }\r\n\r\n    // setFilteredData(items: Promise<IGpusModel>, filterObject: IFilterObject): IItem[] {\r\n    //     console.log(\"setFilteredData items\", items);\r\n    //     let newItems: IItem[] = items;\r\n    //     if(filterObject.gpumodel.length){\r\n    //         newItems = items\r\n    //         .filter((item) => filterObject.gpumodel\r\n    //             .find((gpumodel) => gpumodel === item.gpumodel) !== undefined); \r\n    //     }\r\n    //     if(filterObject.producer.length){\r\n    //         newItems = items\r\n    //         .filter((item) => filterObject.producer\r\n    //             .find((producer) => producer === item.producer) !== undefined); \r\n    //     }\r\n    //     if(filterObject.memorytype.length){\r\n    //         newItems = items\r\n    //         .filter((item) => filterObject.memorytype\r\n    //             .find((memorytype) => memorytype === item.memorytype) !== undefined); \r\n    //     }\r\n    //     if(filterObject.vram.length){\r\n    //         newItems = items\r\n    //         .filter((item) => filterObject.vram\r\n    //             .find((vram) => vram === item.vram) !== undefined); \r\n    //     }\r\n    //     return newItems;\r\n    // }\r\n}","import React, { Component } from 'react';\r\nimport Filter from './filter/Filter';\r\nimport './ItemsList.scss';\r\n\r\nimport LargeBricksView from './views/LargeBricksView';\r\nimport SmallBricksView from './views/SmallBricksView';\r\nimport LargeListView from './views/LargeListView';\r\nimport SmallListView from './views/SmallListView';\r\nimport { DataOperations } from './filter/DataOperations';\r\nimport { IItem } from './views/gpus.model';\r\n\r\ninterface ItemsListState {\r\n  data: IItem[];\r\n  view: number;\r\n}\r\n\r\nexport default class ItemsList extends Component<{}, ItemsListState> {\r\n\r\n  constructor(props: any){\r\n    super(props);\r\n    this.state = {\r\n      data: [],\r\n      view: 1,\r\n    }\r\n    // console.log(\"didMount data \", this.state.data);\r\n  }\r\n\r\n  componentDidMount(){\r\n\r\n    const promisedData = new DataOperations().getFullData();\r\n    promisedData.then((data)=>{\r\n\r\n      this.setState(() => \r\n        ({data: data})\r\n      );\r\n\r\n    })\r\n  }\r\n\r\n    changeView = (choice: number): JSX.Element => {\r\n      let newView = (<div></div>);\r\n        switch(choice){\r\n            case 1: newView = (<LargeBricksView data={this.state.data}/>);\r\n            break;\r\n            // case 2: newView = (<SmallBricksView data={this.state.filteredData}/>);\r\n            // break;\r\n            // case 3: newView = (<LargeListView data={this.state.filteredData}/>);\r\n            // break;\r\n            // case 4: newView = (<SmallListView data={this.state.filteredData}/>);\r\n            // break;\r\n        }\r\n        return newView;\r\n    }\r\n\r\n    changeFilteredData = (filter: any): void => {\r\n      // let newFilteredData = JSON.parse(JSON.stringify(this.state.data));\r\n      // newFilteredData.items = this.state.dataOps.setFilteredData(this.state.data, filter);\r\n      // this.setState(() => ({filteredData: newFilteredData}));\r\n      //  console.log(\"FILTERED\", this.state.filteredData);\r\n    }\r\n\r\n    render(): JSX.Element {\r\n      return (\r\n        <div className=\"shop-content\">\r\n          {/* <Filter data={this.state.data} changeFilteredData={this.changeFilteredData}/> */}\r\n\r\n          \r\n          <div className=\"items-list\">\r\n            <div className=\"items-list__change-view--container\">\r\n              <div className=\"items-list__change-view--btn largeBricks\" onClick={() => this.setState(()=>({view: 1}))}></div>\r\n              <div className=\"items-list__change-view--btn smallBricks\" onClick={() => this.setState(()=>({view: 2}))}></div>\r\n              <div className=\"items-list__change-view--btn largeList\" onClick={() => this.setState(()=>({view: 3}))}></div>\r\n              <div className=\"items-list__change-view--btn smallList\" onClick={() => this.setState(()=>({view: 4}))}></div>\r\n            </div>\r\n            {this.changeView(this.state.view)}\r\n          </div>\r\n        </div>\r\n      )\r\n    };\r\n}","import React from 'react';\r\nimport './PanelAddProd.scss';\r\n\r\ninterface IState{\r\n    url: string,\r\n    name: string,\r\n    desc: string,\r\n    qty: number,\r\n    price: number,\r\n}\r\n\r\nexport default class PanelAddProd extends React.Component<any, IState>{\r\n\r\n    state: IState = {\r\n            url: 'http://localhost:3000/products',\r\n            name: 'TestName',\r\n            desc: 'TestDescr',\r\n            qty: 0,\r\n            price: 0,\r\n    }\r\n\r\n    updateName = (e: React.FormEvent<HTMLInputElement>) => {\r\n        this.setState({name: e.currentTarget.value});\r\n    }\r\n\r\n    updateDesc = (e: React.FormEvent<HTMLTextAreaElement>) => {\r\n        this.setState({desc: e.currentTarget.value});\r\n    }\r\n\r\n    updatePrice = (e: React.FormEvent<HTMLInputElement>) => {\r\n        this.setState({price: Number(e.currentTarget.value)});\r\n    }\r\n\r\n    addProduct = async (e: React.FormEvent<HTMLInputElement>) => {\r\n        e.preventDefault();\r\n        const data = {\r\n            name: this.state.name,\r\n            description: this.state.desc,\r\n            qty: this.state.qty,\r\n            price: this.state.price,\r\n        };\r\n\r\n        const fetchOpts = {\r\n            body: JSON.stringify(data),\r\n            method: 'POST', // or 'PUT'\r\n            mode: 'cors' as RequestMode,\r\n            headers: new Headers({\r\n                Accept: 'application/json',\r\n                'Content-Type': 'application/json',\r\n                'Access-Control-Allow-Origin': '*'\r\n            }),\r\n        };\r\n        try {\r\n            console.log('Fetch data ', data);\r\n            const response = await fetch(this.state.url, fetchOpts);\r\n            console.log('Fetch response ', response.body);\r\n            return response;\r\n        } catch (error) {\r\n            console.log('Fetch error ', error);\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n        <div className=\"panel__add-prod\">\r\n            <div className=\"panel__add-prod--title\">\r\n                Add product\r\n            </div>\r\n            <form className=\"panel__add-prod--form\">\r\n\r\n                <input onChange={this.updateName} name=\"name\" value={this.state.name} type=\"text\" className=\"panel__add-prod--name panel__add-prod--input\" placeholder=\"Name\"/>\r\n\r\n                <textarea onChange={this.updateDesc} name=\"desc\" className=\"panel__add-prod--desc panel__add-prod--input\" rows={4} placeholder=\"Description\"></textarea>\r\n\r\n                <input onChange={this.updatePrice} name=\"price\" type=\"text\" className=\"panel__add-prod--price panel__add-prod--input\" placeholder=\"Price\"/>\r\n\r\n                <input onClick={this.addProduct} type=\"button\" className=\"panel__add-prod--submit panel__add-prod--input\" value=\"Add\"/>\r\n\r\n            </form>\r\n        </div>\r\n    );}\r\n}","import React from 'react';\r\nimport './PanelMenu.scss';\r\nimport { NavLink } from 'react-router-dom';\r\n\r\nconst PanelMenu = () => {\r\n    return (\r\n        <nav className=\"panel__menu\">\r\n            <NavLink to=\"/panel/add\" className=\"panel__link\" activeClassName=\"active\">Add product</NavLink>\r\n            <NavLink to=\"/panel/list\" className=\"panel__link\" activeClassName=\"active\">Products list</NavLink>\r\n        </nav>\r\n    );\r\n}\r\n\r\nexport default PanelMenu;","import React from 'react';\r\nimport { Route, Switch } from 'react-router-dom';\r\nimport './Panel.scss';\r\nimport PanelAddProd from './PanelAddProd';\r\n\r\nimport PanelMenu from './PanelMenu';\r\n\r\nexport const Panel = () => {\r\n    return (\r\n        <section className=\"panel\">\r\n            <PanelMenu/>\r\n\r\n            <Switch>\r\n                <Route path=\"/panel/add\" component={PanelAddProd}/>\r\n            </Switch>\r\n        </section>\r\n    )\r\n}\r\nexport default Panel;","import React from 'react';\nimport './App.scss';\n\nimport Header from './components/header/Header';\nimport Promotions from './components/promotions/Promotions';\n\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route\n} from \"react-router-dom\";\nimport ItemsList from './components/content/ItemsList';\nimport Panel from './components/panel/Panel';\n\nconst App: React.FC = () => {\n  return (\n      <div className=\"App\">\n            <Header/> \n\n            <main className=\"app__content\">\n              <div className=\"gray-cover\"></div>\n              <Switch>\n                <Route path=\"/\" exact component={Promotions}/>\n                <Route path=\"/search\" component={ItemsList}/>\n                <Route path=\"/panel\" component={Panel}/>\n              </Switch>\n                {/* <Route path=\"/\">\n                  <Promotions/>\n                </Route>\n                <Route path=\"/\">\n                  <ItemsList/>\n                </Route>\n                <Route path=\"/panel\">\n                  <Panel/>\n                </Route> */}\n            </main>\n      </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './app/App';\nimport * as serviceWorker from './serviceWorker';\nimport { BrowserRouter } from 'react-router-dom';\n\nReactDOM.render(\n  <React.StrictMode>\n    <BrowserRouter>\n      <App />\n    </BrowserRouter>,\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}